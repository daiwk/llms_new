from paddle.fluid.initializer import Constant
from paddle.fluid.param_attr import ParamAttr
import paddle.fluid as fluid

def x2paddle_net():
    IteratorV2 = [0] * 5
    IteratorV2[0] = fluid.layers.data(dtype='int32', shape=[-1, 128], name='IteratorV2_0', append_batch_size=False)
    IteratorV2[1] = fluid.layers.data(dtype='int32', shape=[-1, 128], name='IteratorV2_1', append_batch_size=False)
    IteratorV2[2] = fluid.layers.data(dtype='int32', shape=[-1], name='IteratorV2_2', append_batch_size=False)
    IteratorV2[3] = fluid.layers.data(dtype='int32', shape=[-1], name='IteratorV2_3', append_batch_size=False)
    IteratorV2[4] = fluid.layers.data(dtype='int32', shape=[-1, 128], name='IteratorV2_4', append_batch_size=False)
    bert_embeddings_word_embeddings = fluid.layers.create_parameter(dtype='float32', shape=[21128, 128], name='bert_embeddings_word_embeddings', default_initializer=Constant(0.0))
    bert_embeddings_word_embeddings_2 = fluid.layers.create_parameter(dtype='float32', shape=[128, 312], name='bert_embeddings_word_embeddings_2', default_initializer=Constant(0.0))
    bert_embeddings_token_type_embeddings = fluid.layers.create_parameter(dtype='float32', shape=[2, 312], name='bert_embeddings_token_type_embeddings', default_initializer=Constant(0.0))
    bert_embeddings_position_embeddings = fluid.layers.create_parameter(dtype='float32', shape=[512, 312], name='bert_embeddings_position_embeddings', default_initializer=Constant(0.0))
    bert_embeddings_LayerNorm_beta = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_embeddings_LayerNorm_beta', default_initializer=Constant(0.0))
    bert_embeddings_LayerNorm_gamma = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_embeddings_LayerNorm_gamma', default_initializer=Constant(0.0))
    bert_embeddings_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_embeddings_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_embeddings_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_embeddings_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_embeddings_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_embeddings_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_attention_self_query_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 312], name='bert_encoder_layer_shared_attention_self_query_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_query_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_self_query_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_key_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 312], name='bert_encoder_layer_shared_attention_self_key_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_key_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_self_key_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_value_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 312], name='bert_encoder_layer_shared_attention_self_value_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_value_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_self_value_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_self_Mul_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_attention_self_Mul_y', default_initializer=Constant(0.1961161345243454))
    bert_encoder_layer_shared_attention_self_sub_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_attention_self_sub_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_attention_self_mul_1_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_attention_self_mul_1_y', default_initializer=Constant(-10000.0))
    bert_encoder_layer_shared_attention_output_dense_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 312], name='bert_encoder_layer_shared_attention_output_dense_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_dense_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_output_dense_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_LayerNorm_beta = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_output_LayerNorm_beta', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_LayerNorm_gamma = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_attention_output_LayerNorm_gamma', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_attention_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_attention_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_intermediate_dense_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 1248], name='bert_encoder_layer_shared_intermediate_dense_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_intermediate_dense_bias = fluid.layers.create_parameter(dtype='float32', shape=[1248], name='bert_encoder_layer_shared_intermediate_dense_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_intermediate_dense_mul_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_intermediate_dense_mul_x', default_initializer=Constant(0.044714998453855515))
    bert_encoder_layer_shared_intermediate_dense_mul_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_intermediate_dense_mul_1_x', default_initializer=Constant(0.7978845834732056))
    bert_encoder_layer_shared_intermediate_dense_add_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_intermediate_dense_add_1_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_intermediate_dense_mul_2_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_intermediate_dense_mul_2_x', default_initializer=Constant(0.5))
    bert_encoder_layer_shared_output_dense_kernel = fluid.layers.create_parameter(dtype='float32', shape=[1248, 312], name='bert_encoder_layer_shared_output_dense_kernel', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_dense_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_output_dense_bias', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_LayerNorm_beta = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_output_LayerNorm_beta', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_LayerNorm_gamma = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_encoder_layer_shared_output_LayerNorm_gamma', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_1_attention_self_Mul_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_attention_self_Mul_y', default_initializer=Constant(0.1961161345243454))
    bert_encoder_layer_shared_1_attention_self_sub_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_attention_self_sub_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_1_attention_self_mul_1_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_attention_self_mul_1_y', default_initializer=Constant(-10000.0))
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_1_intermediate_dense_mul_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_intermediate_dense_mul_x', default_initializer=Constant(0.044714998453855515))
    bert_encoder_layer_shared_1_intermediate_dense_mul_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_intermediate_dense_mul_1_x', default_initializer=Constant(0.7978845834732056))
    bert_encoder_layer_shared_1_intermediate_dense_add_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_intermediate_dense_add_1_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_1_intermediate_dense_mul_2_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_intermediate_dense_mul_2_x', default_initializer=Constant(0.5))
    bert_encoder_layer_shared_1_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_1_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_1_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_1_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_2_attention_self_Mul_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_attention_self_Mul_y', default_initializer=Constant(0.1961161345243454))
    bert_encoder_layer_shared_2_attention_self_sub_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_attention_self_sub_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_2_attention_self_mul_1_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_attention_self_mul_1_y', default_initializer=Constant(-10000.0))
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_2_intermediate_dense_mul_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_intermediate_dense_mul_x', default_initializer=Constant(0.044714998453855515))
    bert_encoder_layer_shared_2_intermediate_dense_mul_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_intermediate_dense_mul_1_x', default_initializer=Constant(0.7978845834732056))
    bert_encoder_layer_shared_2_intermediate_dense_add_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_intermediate_dense_add_1_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_2_intermediate_dense_mul_2_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_intermediate_dense_mul_2_x', default_initializer=Constant(0.5))
    bert_encoder_layer_shared_2_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_2_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_2_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_2_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_3_attention_self_Mul_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_attention_self_Mul_y', default_initializer=Constant(0.1961161345243454))
    bert_encoder_layer_shared_3_attention_self_sub_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_attention_self_sub_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_3_attention_self_mul_1_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_attention_self_mul_1_y', default_initializer=Constant(-10000.0))
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_encoder_layer_shared_3_intermediate_dense_mul_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_intermediate_dense_mul_x', default_initializer=Constant(0.044714998453855515))
    bert_encoder_layer_shared_3_intermediate_dense_mul_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_intermediate_dense_mul_1_x', default_initializer=Constant(0.7978845834732056))
    bert_encoder_layer_shared_3_intermediate_dense_add_1_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_intermediate_dense_add_1_x', default_initializer=Constant(1.0))
    bert_encoder_layer_shared_3_intermediate_dense_mul_2_x = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_intermediate_dense_mul_2_x', default_initializer=Constant(0.5))
    bert_encoder_layer_shared_3_output_LayerNorm_moments_mean_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_3_output_LayerNorm_moments_mean_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_3_output_LayerNorm_moments_variance_reduction_indices = fluid.layers.create_parameter(dtype='int32', shape=[1], name='bert_encoder_layer_shared_3_output_LayerNorm_moments_variance_reduction_indices', default_initializer=Constant(0.0))
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add_y = fluid.layers.create_parameter(dtype='float32', shape=[1], name='bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add_y', default_initializer=Constant(9.999999960041972e-13))
    bert_pooler_dense_kernel = fluid.layers.create_parameter(dtype='float32', shape=[312, 312], name='bert_pooler_dense_kernel', default_initializer=Constant(0.0))
    bert_pooler_dense_bias = fluid.layers.create_parameter(dtype='float32', shape=[312], name='bert_pooler_dense_bias', default_initializer=Constant(0.0))
    bert_encoder_ones = fluid.layers.create_parameter(dtype='float32', shape=[64, 128, 1], name='bert_encoder_ones', default_initializer=Constant(1.0))
    bert_embeddings_ExpandDims = fluid.layers.unsqueeze(IteratorV2[0], axes=[-1])
    bert_embeddings_Reshape_2 = fluid.layers.reshape(IteratorV2[4], shape=[-1])
    bert_encoder_Reshape = fluid.layers.reshape(IteratorV2[1], shape=[-1, 1, 128])
    bert_embeddings_Slice = fluid.layers.slice(bert_embeddings_position_embeddings, axes=[0, 1], starts=[0, 0], ends=[128, 99999999])
    bert_embeddings_Reshape = fluid.layers.reshape(bert_embeddings_ExpandDims, shape=[-1])
    bert_embeddings_one_hot = fluid.one_hot(bert_embeddings_Reshape_2, depth=2)
    bert_encoder_Cast = fluid.layers.cast(bert_encoder_Reshape, dtype='float32')
    bert_embeddings_Reshape_4 = fluid.layers.reshape(bert_embeddings_Slice, shape=[-1, 128, 312])
    bert_embeddings_GatherV2 = fluid.layers.gather(input=bert_embeddings_word_embeddings, index=bert_embeddings_Reshape, overwrite=False)
    bert_embeddings_MatMul_1 = fluid.layers.matmul(x=bert_embeddings_one_hot, y=bert_embeddings_token_type_embeddings, transpose_x=False, transpose_y=False)
    #bert_encoder_mul = fluid.layers.elementwise_mul(x=bert_encoder_ones, y=bert_encoder_Cast)
    bert_encoder_mul = bert_encoder_Cast
    bert_embeddings_MatMul = fluid.layers.matmul(x=bert_embeddings_GatherV2, y=bert_embeddings_word_embeddings_2, transpose_x=False, transpose_y=False)
    bert_embeddings_Reshape_3 = fluid.layers.reshape(bert_embeddings_MatMul_1, shape=[-1, 128, 312])
    bert_encoder_layer_shared_attention_self_ExpandDims = fluid.layers.unsqueeze(bert_encoder_mul, axes=[1])
    bert_encoder_layer_shared_1_attention_self_ExpandDims = fluid.layers.unsqueeze(bert_encoder_mul, axes=[1])
    bert_encoder_layer_shared_2_attention_self_ExpandDims = fluid.layers.unsqueeze(bert_encoder_mul, axes=[1])
    bert_encoder_layer_shared_3_attention_self_ExpandDims = fluid.layers.unsqueeze(bert_encoder_mul, axes=[1])
    bert_embeddings_Reshape_1 = fluid.layers.reshape(bert_embeddings_MatMul, shape=[-1, 128, 312])
    bert_encoder_layer_shared_attention_self_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_self_sub_x, y=bert_encoder_layer_shared_attention_self_ExpandDims)
    bert_encoder_layer_shared_1_attention_self_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_1_attention_self_sub_x, y=bert_encoder_layer_shared_1_attention_self_ExpandDims)
    bert_encoder_layer_shared_2_attention_self_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_2_attention_self_sub_x, y=bert_encoder_layer_shared_2_attention_self_ExpandDims)
    bert_encoder_layer_shared_3_attention_self_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_3_attention_self_sub_x, y=bert_encoder_layer_shared_3_attention_self_ExpandDims)
    bert_embeddings_add = fluid.layers.elementwise_add(x=bert_embeddings_Reshape_1, y=bert_embeddings_Reshape_3)
    bert_encoder_layer_shared_attention_self_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_self_sub, y=bert_encoder_layer_shared_attention_self_mul_1_y)
    bert_encoder_layer_shared_1_attention_self_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_self_sub, y=bert_encoder_layer_shared_1_attention_self_mul_1_y)
    bert_encoder_layer_shared_2_attention_self_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_self_sub, y=bert_encoder_layer_shared_2_attention_self_mul_1_y)
    bert_encoder_layer_shared_3_attention_self_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_self_sub, y=bert_encoder_layer_shared_3_attention_self_mul_1_y)
    bert_embeddings_add_1 = fluid.layers.elementwise_add(x=bert_embeddings_add, y=bert_embeddings_Reshape_4)
    bert_embeddings_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_embeddings_add_1, dim=[2], keep_dim=True)
    bert_embeddings_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_embeddings_add_1, y=bert_embeddings_LayerNorm_moments_mean)
    bert_embeddings_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_embeddings_LayerNorm_moments_SquaredDifference, y=bert_embeddings_LayerNorm_moments_SquaredDifference)
    bert_embeddings_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_embeddings_LayerNorm_moments_SquaredDifference, dim=[2], keep_dim=True)
    bert_embeddings_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_embeddings_LayerNorm_moments_variance, y=bert_embeddings_LayerNorm_batchnorm_add_y)
    bert_embeddings_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_embeddings_LayerNorm_batchnorm_add)
    bert_embeddings_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_embeddings_LayerNorm_batchnorm_Rsqrt, y=bert_embeddings_LayerNorm_gamma)
    bert_embeddings_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_embeddings_add_1, y=bert_embeddings_LayerNorm_batchnorm_mul)
    bert_embeddings_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_embeddings_LayerNorm_moments_mean, y=bert_embeddings_LayerNorm_batchnorm_mul)
    bert_embeddings_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_embeddings_LayerNorm_beta, y=bert_embeddings_LayerNorm_batchnorm_mul_2)
    bert_embeddings_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_embeddings_LayerNorm_batchnorm_mul_1, y=bert_embeddings_LayerNorm_batchnorm_sub)
    bert_encoder_Reshape_1 = fluid.layers.reshape(bert_embeddings_LayerNorm_batchnorm_add_1, shape=[-1, 312])
    bert_encoder_layer_shared_attention_self_query_MatMul = fluid.layers.matmul(x=bert_encoder_Reshape_1, y=bert_encoder_layer_shared_attention_self_query_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_attention_self_key_MatMul = fluid.layers.matmul(x=bert_encoder_Reshape_1, y=bert_encoder_layer_shared_attention_self_key_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_attention_self_value_MatMul = fluid.layers.matmul(x=bert_encoder_Reshape_1, y=bert_encoder_layer_shared_attention_self_value_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_attention_self_query_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_self_query_MatMul, y=bert_encoder_layer_shared_attention_self_query_bias)
    bert_encoder_layer_shared_attention_self_key_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_self_key_MatMul, y=bert_encoder_layer_shared_attention_self_key_bias)
    bert_encoder_layer_shared_attention_self_value_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_self_value_MatMul, y=bert_encoder_layer_shared_attention_self_value_bias)
    bert_encoder_layer_shared_attention_self_Reshape = fluid.layers.reshape(bert_encoder_layer_shared_attention_self_query_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_attention_self_Reshape_1 = fluid.layers.reshape(bert_encoder_layer_shared_attention_self_key_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_attention_self_Reshape_2 = fluid.layers.reshape(bert_encoder_layer_shared_attention_self_value_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_attention_self_transpose = fluid.layers.transpose(bert_encoder_layer_shared_attention_self_Reshape, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_attention_self_transpose_1 = fluid.layers.transpose(bert_encoder_layer_shared_attention_self_Reshape_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_attention_self_transpose_2 = fluid.layers.transpose(bert_encoder_layer_shared_attention_self_Reshape_2, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_attention_self_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_attention_self_transpose, y=bert_encoder_layer_shared_attention_self_transpose_1, transpose_x=False, transpose_y=True)
    bert_encoder_layer_shared_attention_self_Mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_self_MatMul, y=bert_encoder_layer_shared_attention_self_Mul_y)
    bert_encoder_layer_shared_attention_self_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_self_Mul, y=bert_encoder_layer_shared_attention_self_mul_1)
    bert_encoder_layer_shared_attention_self_Softmax = fluid.layers.softmax(bert_encoder_layer_shared_attention_self_add, axis=None)
    bert_encoder_layer_shared_attention_self_MatMul_1 = fluid.layers.matmul(x=bert_encoder_layer_shared_attention_self_Softmax, y=bert_encoder_layer_shared_attention_self_transpose_2, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_attention_self_transpose_3 = fluid.layers.transpose(bert_encoder_layer_shared_attention_self_MatMul_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_attention_self_Reshape_3 = fluid.layers.reshape(bert_encoder_layer_shared_attention_self_transpose_3, shape=[-1, 312])
    bert_encoder_layer_shared_attention_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_attention_self_Reshape_3, y=bert_encoder_layer_shared_attention_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_attention_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_output_dense_MatMul, y=bert_encoder_layer_shared_attention_output_dense_bias)
    bert_encoder_layer_shared_attention_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_output_dense_BiasAdd, y=bert_encoder_Reshape_1)
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_attention_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_output_add, y=bert_encoder_layer_shared_attention_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_attention_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_attention_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_attention_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_attention_output_LayerNorm_gamma)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_output_add, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_attention_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_output_LayerNorm_beta, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_intermediate_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_intermediate_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_intermediate_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_intermediate_dense_MatMul, y=bert_encoder_layer_shared_intermediate_dense_bias)
    bert_encoder_layer_shared_intermediate_dense_Pow = fluid.layers.pow(bert_encoder_layer_shared_intermediate_dense_BiasAdd, factor=3.0)
    bert_encoder_layer_shared_intermediate_dense_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_intermediate_dense_mul_x, y=bert_encoder_layer_shared_intermediate_dense_Pow)
    bert_encoder_layer_shared_intermediate_dense_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_intermediate_dense_mul)
    bert_encoder_layer_shared_intermediate_dense_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_intermediate_dense_mul_1_x, y=bert_encoder_layer_shared_intermediate_dense_add)
    bert_encoder_layer_shared_intermediate_dense_Tanh = fluid.layers.tanh(bert_encoder_layer_shared_intermediate_dense_mul_1)
    bert_encoder_layer_shared_intermediate_dense_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_intermediate_dense_add_1_x, y=bert_encoder_layer_shared_intermediate_dense_Tanh)
    bert_encoder_layer_shared_intermediate_dense_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_intermediate_dense_mul_2_x, y=bert_encoder_layer_shared_intermediate_dense_add_1)
    bert_encoder_layer_shared_intermediate_dense_mul_3 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_intermediate_dense_mul_2)
    bert_encoder_layer_shared_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_intermediate_dense_mul_3, y=bert_encoder_layer_shared_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_output_dense_MatMul, y=bert_encoder_layer_shared_output_dense_bias)
    bert_encoder_layer_shared_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_output_dense_BiasAdd, y=bert_encoder_layer_shared_attention_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_output_add, y=bert_encoder_layer_shared_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_output_LayerNorm_gamma)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_output_add, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_output_LayerNorm_beta, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_1_attention_self_query_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_query_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_attention_self_key_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_key_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_attention_self_value_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_value_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_attention_self_query_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_self_query_MatMul, y=bert_encoder_layer_shared_attention_self_query_bias)
    bert_encoder_layer_shared_1_attention_self_key_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_self_key_MatMul, y=bert_encoder_layer_shared_attention_self_key_bias)
    bert_encoder_layer_shared_1_attention_self_value_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_self_value_MatMul, y=bert_encoder_layer_shared_attention_self_value_bias)
    bert_encoder_layer_shared_1_attention_self_Reshape = fluid.layers.reshape(bert_encoder_layer_shared_1_attention_self_query_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_1_attention_self_Reshape_1 = fluid.layers.reshape(bert_encoder_layer_shared_1_attention_self_key_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_1_attention_self_Reshape_2 = fluid.layers.reshape(bert_encoder_layer_shared_1_attention_self_value_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_1_attention_self_transpose = fluid.layers.transpose(bert_encoder_layer_shared_1_attention_self_Reshape, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_1_attention_self_transpose_1 = fluid.layers.transpose(bert_encoder_layer_shared_1_attention_self_Reshape_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_1_attention_self_transpose_2 = fluid.layers.transpose(bert_encoder_layer_shared_1_attention_self_Reshape_2, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_1_attention_self_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_attention_self_transpose, y=bert_encoder_layer_shared_1_attention_self_transpose_1, transpose_x=False, transpose_y=True)
    bert_encoder_layer_shared_1_attention_self_Mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_self_MatMul, y=bert_encoder_layer_shared_1_attention_self_Mul_y)
    bert_encoder_layer_shared_1_attention_self_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_self_Mul, y=bert_encoder_layer_shared_1_attention_self_mul_1)
    bert_encoder_layer_shared_1_attention_self_Softmax = fluid.layers.softmax(bert_encoder_layer_shared_1_attention_self_add, axis=None)
    bert_encoder_layer_shared_1_attention_self_MatMul_1 = fluid.layers.matmul(x=bert_encoder_layer_shared_1_attention_self_Softmax, y=bert_encoder_layer_shared_1_attention_self_transpose_2, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_attention_self_transpose_3 = fluid.layers.transpose(bert_encoder_layer_shared_1_attention_self_MatMul_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_1_attention_self_Reshape_3 = fluid.layers.reshape(bert_encoder_layer_shared_1_attention_self_transpose_3, shape=[-1, 312])
    bert_encoder_layer_shared_1_attention_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_attention_self_Reshape_3, y=bert_encoder_layer_shared_attention_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_attention_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_output_dense_MatMul, y=bert_encoder_layer_shared_attention_output_dense_bias)
    bert_encoder_layer_shared_1_attention_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_output_dense_BiasAdd, y=bert_encoder_layer_shared_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_1_attention_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_1_attention_output_add, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_attention_output_LayerNorm_gamma)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_output_add, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_output_LayerNorm_beta, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_1_intermediate_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_intermediate_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_intermediate_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_intermediate_dense_MatMul, y=bert_encoder_layer_shared_intermediate_dense_bias)
    bert_encoder_layer_shared_1_intermediate_dense_Pow = fluid.layers.pow(bert_encoder_layer_shared_1_intermediate_dense_BiasAdd, factor=3.0)
    bert_encoder_layer_shared_1_intermediate_dense_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_intermediate_dense_mul_x, y=bert_encoder_layer_shared_1_intermediate_dense_Pow)
    bert_encoder_layer_shared_1_intermediate_dense_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_1_intermediate_dense_mul)
    bert_encoder_layer_shared_1_intermediate_dense_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_intermediate_dense_mul_1_x, y=bert_encoder_layer_shared_1_intermediate_dense_add)
    bert_encoder_layer_shared_1_intermediate_dense_Tanh = fluid.layers.tanh(bert_encoder_layer_shared_1_intermediate_dense_mul_1)
    bert_encoder_layer_shared_1_intermediate_dense_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_intermediate_dense_add_1_x, y=bert_encoder_layer_shared_1_intermediate_dense_Tanh)
    bert_encoder_layer_shared_1_intermediate_dense_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_intermediate_dense_mul_2_x, y=bert_encoder_layer_shared_1_intermediate_dense_add_1)
    bert_encoder_layer_shared_1_intermediate_dense_mul_3 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_1_intermediate_dense_mul_2)
    bert_encoder_layer_shared_1_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_intermediate_dense_mul_3, y=bert_encoder_layer_shared_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_1_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_output_dense_MatMul, y=bert_encoder_layer_shared_output_dense_bias)
    bert_encoder_layer_shared_1_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_output_dense_BiasAdd, y=bert_encoder_layer_shared_1_attention_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_1_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_1_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_1_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_1_output_add, y=bert_encoder_layer_shared_1_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_1_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_1_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_1_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_1_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_output_LayerNorm_gamma)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_output_add, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_1_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_output_LayerNorm_beta, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_2_attention_self_query_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_query_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_attention_self_key_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_key_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_attention_self_value_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_value_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_attention_self_query_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_self_query_MatMul, y=bert_encoder_layer_shared_attention_self_query_bias)
    bert_encoder_layer_shared_2_attention_self_key_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_self_key_MatMul, y=bert_encoder_layer_shared_attention_self_key_bias)
    bert_encoder_layer_shared_2_attention_self_value_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_self_value_MatMul, y=bert_encoder_layer_shared_attention_self_value_bias)
    bert_encoder_layer_shared_2_attention_self_Reshape = fluid.layers.reshape(bert_encoder_layer_shared_2_attention_self_query_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_2_attention_self_Reshape_1 = fluid.layers.reshape(bert_encoder_layer_shared_2_attention_self_key_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_2_attention_self_Reshape_2 = fluid.layers.reshape(bert_encoder_layer_shared_2_attention_self_value_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_2_attention_self_transpose = fluid.layers.transpose(bert_encoder_layer_shared_2_attention_self_Reshape, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_2_attention_self_transpose_1 = fluid.layers.transpose(bert_encoder_layer_shared_2_attention_self_Reshape_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_2_attention_self_transpose_2 = fluid.layers.transpose(bert_encoder_layer_shared_2_attention_self_Reshape_2, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_2_attention_self_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_attention_self_transpose, y=bert_encoder_layer_shared_2_attention_self_transpose_1, transpose_x=False, transpose_y=True)
    bert_encoder_layer_shared_2_attention_self_Mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_self_MatMul, y=bert_encoder_layer_shared_2_attention_self_Mul_y)
    bert_encoder_layer_shared_2_attention_self_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_self_Mul, y=bert_encoder_layer_shared_2_attention_self_mul_1)
    bert_encoder_layer_shared_2_attention_self_Softmax = fluid.layers.softmax(bert_encoder_layer_shared_2_attention_self_add, axis=None)
    bert_encoder_layer_shared_2_attention_self_MatMul_1 = fluid.layers.matmul(x=bert_encoder_layer_shared_2_attention_self_Softmax, y=bert_encoder_layer_shared_2_attention_self_transpose_2, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_attention_self_transpose_3 = fluid.layers.transpose(bert_encoder_layer_shared_2_attention_self_MatMul_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_2_attention_self_Reshape_3 = fluid.layers.reshape(bert_encoder_layer_shared_2_attention_self_transpose_3, shape=[-1, 312])
    bert_encoder_layer_shared_2_attention_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_attention_self_Reshape_3, y=bert_encoder_layer_shared_attention_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_attention_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_output_dense_MatMul, y=bert_encoder_layer_shared_attention_output_dense_bias)
    bert_encoder_layer_shared_2_attention_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_output_dense_BiasAdd, y=bert_encoder_layer_shared_1_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_2_attention_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_2_attention_output_add, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_attention_output_LayerNorm_gamma)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_output_add, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_output_LayerNorm_beta, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_2_intermediate_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_intermediate_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_intermediate_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_intermediate_dense_MatMul, y=bert_encoder_layer_shared_intermediate_dense_bias)
    bert_encoder_layer_shared_2_intermediate_dense_Pow = fluid.layers.pow(bert_encoder_layer_shared_2_intermediate_dense_BiasAdd, factor=3.0)
    bert_encoder_layer_shared_2_intermediate_dense_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_intermediate_dense_mul_x, y=bert_encoder_layer_shared_2_intermediate_dense_Pow)
    bert_encoder_layer_shared_2_intermediate_dense_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_2_intermediate_dense_mul)
    bert_encoder_layer_shared_2_intermediate_dense_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_intermediate_dense_mul_1_x, y=bert_encoder_layer_shared_2_intermediate_dense_add)
    bert_encoder_layer_shared_2_intermediate_dense_Tanh = fluid.layers.tanh(bert_encoder_layer_shared_2_intermediate_dense_mul_1)
    bert_encoder_layer_shared_2_intermediate_dense_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_intermediate_dense_add_1_x, y=bert_encoder_layer_shared_2_intermediate_dense_Tanh)
    bert_encoder_layer_shared_2_intermediate_dense_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_intermediate_dense_mul_2_x, y=bert_encoder_layer_shared_2_intermediate_dense_add_1)
    bert_encoder_layer_shared_2_intermediate_dense_mul_3 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_2_intermediate_dense_mul_2)
    bert_encoder_layer_shared_2_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_intermediate_dense_mul_3, y=bert_encoder_layer_shared_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_2_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_output_dense_MatMul, y=bert_encoder_layer_shared_output_dense_bias)
    bert_encoder_layer_shared_2_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_output_dense_BiasAdd, y=bert_encoder_layer_shared_2_attention_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_2_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_2_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_2_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_2_output_add, y=bert_encoder_layer_shared_2_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_2_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_2_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_2_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_2_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_output_LayerNorm_gamma)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_output_add, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_2_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_output_LayerNorm_beta, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_3_attention_self_query_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_query_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_attention_self_key_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_key_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_attention_self_value_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_attention_self_value_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_attention_self_query_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_self_query_MatMul, y=bert_encoder_layer_shared_attention_self_query_bias)
    bert_encoder_layer_shared_3_attention_self_key_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_self_key_MatMul, y=bert_encoder_layer_shared_attention_self_key_bias)
    bert_encoder_layer_shared_3_attention_self_value_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_self_value_MatMul, y=bert_encoder_layer_shared_attention_self_value_bias)
    bert_encoder_layer_shared_3_attention_self_Reshape = fluid.layers.reshape(bert_encoder_layer_shared_3_attention_self_query_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_3_attention_self_Reshape_1 = fluid.layers.reshape(bert_encoder_layer_shared_3_attention_self_key_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_3_attention_self_Reshape_2 = fluid.layers.reshape(bert_encoder_layer_shared_3_attention_self_value_BiasAdd, shape=[-1, 128, 12, 26])
    bert_encoder_layer_shared_3_attention_self_transpose = fluid.layers.transpose(bert_encoder_layer_shared_3_attention_self_Reshape, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_3_attention_self_transpose_1 = fluid.layers.transpose(bert_encoder_layer_shared_3_attention_self_Reshape_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_3_attention_self_transpose_2 = fluid.layers.transpose(bert_encoder_layer_shared_3_attention_self_Reshape_2, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_3_attention_self_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_3_attention_self_transpose, y=bert_encoder_layer_shared_3_attention_self_transpose_1, transpose_x=False, transpose_y=True)
    bert_encoder_layer_shared_3_attention_self_Mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_self_MatMul, y=bert_encoder_layer_shared_3_attention_self_Mul_y)
    bert_encoder_layer_shared_3_attention_self_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_self_Mul, y=bert_encoder_layer_shared_3_attention_self_mul_1)
    bert_encoder_layer_shared_3_attention_self_Softmax = fluid.layers.softmax(bert_encoder_layer_shared_3_attention_self_add, axis=None)
    bert_encoder_layer_shared_3_attention_self_MatMul_1 = fluid.layers.matmul(x=bert_encoder_layer_shared_3_attention_self_Softmax, y=bert_encoder_layer_shared_3_attention_self_transpose_2, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_attention_self_transpose_3 = fluid.layers.transpose(bert_encoder_layer_shared_3_attention_self_MatMul_1, perm=[0, 2, 1, 3])
    bert_encoder_layer_shared_3_attention_self_Reshape_3 = fluid.layers.reshape(bert_encoder_layer_shared_3_attention_self_transpose_3, shape=[-1, 312])
    bert_encoder_layer_shared_3_attention_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_3_attention_self_Reshape_3, y=bert_encoder_layer_shared_attention_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_attention_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_output_dense_MatMul, y=bert_encoder_layer_shared_attention_output_dense_bias)
    bert_encoder_layer_shared_3_attention_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_output_dense_BiasAdd, y=bert_encoder_layer_shared_2_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_3_attention_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_3_attention_output_add, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_attention_output_LayerNorm_gamma)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_output_add, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_attention_output_LayerNorm_beta, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_sub)
    bert_encoder_layer_shared_3_intermediate_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_1, y=bert_encoder_layer_shared_intermediate_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_intermediate_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_intermediate_dense_MatMul, y=bert_encoder_layer_shared_intermediate_dense_bias)
    bert_encoder_layer_shared_3_intermediate_dense_Pow = fluid.layers.pow(bert_encoder_layer_shared_3_intermediate_dense_BiasAdd, factor=3.0)
    bert_encoder_layer_shared_3_intermediate_dense_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_intermediate_dense_mul_x, y=bert_encoder_layer_shared_3_intermediate_dense_Pow)
    bert_encoder_layer_shared_3_intermediate_dense_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_3_intermediate_dense_mul)
    bert_encoder_layer_shared_3_intermediate_dense_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_intermediate_dense_mul_1_x, y=bert_encoder_layer_shared_3_intermediate_dense_add)
    bert_encoder_layer_shared_3_intermediate_dense_Tanh = fluid.layers.tanh(bert_encoder_layer_shared_3_intermediate_dense_mul_1)
    bert_encoder_layer_shared_3_intermediate_dense_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_intermediate_dense_add_1_x, y=bert_encoder_layer_shared_3_intermediate_dense_Tanh)
    bert_encoder_layer_shared_3_intermediate_dense_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_intermediate_dense_mul_2_x, y=bert_encoder_layer_shared_3_intermediate_dense_add_1)
    bert_encoder_layer_shared_3_intermediate_dense_mul_3 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_intermediate_dense_BiasAdd, y=bert_encoder_layer_shared_3_intermediate_dense_mul_2)
    bert_encoder_layer_shared_3_output_dense_MatMul = fluid.layers.matmul(x=bert_encoder_layer_shared_3_intermediate_dense_mul_3, y=bert_encoder_layer_shared_output_dense_kernel, transpose_x=False, transpose_y=False)
    bert_encoder_layer_shared_3_output_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_output_dense_MatMul, y=bert_encoder_layer_shared_output_dense_bias)
    bert_encoder_layer_shared_3_output_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_output_dense_BiasAdd, y=bert_encoder_layer_shared_3_attention_output_LayerNorm_batchnorm_add_1)
    bert_encoder_layer_shared_3_output_LayerNorm_moments_mean = fluid.layers.reduce_mean(bert_encoder_layer_shared_3_output_add, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_3_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_3_output_add, y=bert_encoder_layer_shared_3_output_LayerNorm_moments_mean)
    bert_encoder_layer_shared_3_output_LayerNorm_moments_SquaredDifference = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_output_LayerNorm_moments_SquaredDifference, y=bert_encoder_layer_shared_3_output_LayerNorm_moments_SquaredDifference)
    bert_encoder_layer_shared_3_output_LayerNorm_moments_variance = fluid.layers.reduce_mean(bert_encoder_layer_shared_3_output_LayerNorm_moments_SquaredDifference, dim=[1], keep_dim=True)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_output_LayerNorm_moments_variance, y=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add_y)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_Rsqrt = fluid.layers.rsqrt(bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_Rsqrt, y=bert_encoder_layer_shared_output_LayerNorm_gamma)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul_1 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_output_add, y=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul_2 = fluid.layers.elementwise_mul(x=bert_encoder_layer_shared_3_output_LayerNorm_moments_mean, y=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_sub = fluid.layers.elementwise_sub(x=bert_encoder_layer_shared_output_LayerNorm_beta, y=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul_2)
    bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add_1 = fluid.layers.elementwise_add(x=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_mul_1, y=bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_sub)
    bert_encoder_Reshape_5 = fluid.layers.reshape(bert_encoder_layer_shared_3_output_LayerNorm_batchnorm_add_1, shape=[-1, 128, 312])
    bert_pooler_strided_slice = fluid.layers.slice(bert_encoder_Reshape_5, axes=[0, 1, 2], starts=[0, 0, 0], ends=[999999, 1, 999999])
    bert_pooler_Squeeze = fluid.layers.squeeze(bert_pooler_strided_slice, axes=[1])
    bert_pooler_dense_MatMul = fluid.layers.matmul(x=bert_pooler_Squeeze, y=bert_pooler_dense_kernel, transpose_x=False, transpose_y=False)
    bert_pooler_dense_BiasAdd = fluid.layers.elementwise_add(x=bert_pooler_dense_MatMul, y=bert_pooler_dense_bias)
    bert_pooler_dense_Tanh = fluid.layers.tanh(bert_pooler_dense_BiasAdd)

    # 手动添加
    #bert_pooler_dense_Tanh = fluid.layers.fc(bert_pooler_dense_Tanh, size=312, param_attr="output_weights", bias_attr="output_bias")
    #bert_pooler_dense_Tanh = fluid.layers.softmax(bert_pooler_dense_Tanh)
    output_weights = fluid.layers.create_parameter(dtype='float32', shape=[2, 312], name='output_weights', default_initializer=Constant(0.0))
    output_bias = fluid.layers.create_parameter(dtype='float32', shape=[2], name='output_bias', default_initializer=Constant(0.0))
    loss_MatMul = fluid.layers.matmul(x=bert_pooler_dense_Tanh, y=output_weights, transpose_x=False, transpose_y=True)
    loss_BiasAdd = fluid.layers.elementwise_add(x=loss_MatMul, y=output_bias)
    loss_Softmax = fluid.layers.softmax(loss_BiasAdd, axis=None)

    return [IteratorV2], [loss_Softmax]

def run_net(param_dir="./"):
    import os
    inputs, outputs = x2paddle_net()

    ops = fluid.default_main_program().global_block().ops
    used_vars = list()
    for op in ops:
        used_vars += op.input_arg_names

    tmp = list()
    for input in inputs:
        if isinstance(input, list):
            for ipt in input:
                if ipt.name not in used_vars:
                    continue
                tmp.append(ipt)
        else:
            if input.name not in used_vars:
                continue
            tmp.append(input)
    inputs = tmp
    for i, out in enumerate(outputs):
        if isinstance(out, list):
            for out_part in out:
                outputs.append(out_part)
            del outputs[i]
    exe = fluid.Executor(fluid.CPUPlace())
    exe.run(fluid.default_startup_program())

    def if_exist(var):
        b = os.path.exists(os.path.join(param_dir, var.name))
        return b

    fluid.io.load_vars(exe,
                       param_dir,
                       fluid.default_main_program(),
                       predicate=if_exist)
    import pickle
    with open('inputs.pkl', 'rb') as f:
        x = pickle.load(f)
    for k, v in x.items():
        print(x[k].shape)
        x[k] = v[0:32, :]
        print(x[k].shape)
    result = exe.run(feed=x, fetch_list=outputs)
    print(result[0])
    print(result[0].shape)

    # 重新导出为inference模型
    fluid.io.save_inference_model(dirname='albert_paddle_infer_model_with_batchsize', feeded_var_names=[ipt.name for ipt in inputs], 
                            target_vars=outputs, executor=exe, model_filename='__model__',
                            params_filename='__params__')
run_net()
